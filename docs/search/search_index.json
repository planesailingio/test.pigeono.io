{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Make an impact on social media and increase engagement","title":"Home"},{"location":"security/","text":"High Level Architecture Design \u00b6 Authentication \u00b6 PigeonHole does not store any username/passwords for authentication by design. From the very beginning PigeonHole requires you to authenticate through a third-party Identity Provider like Microsoft (Azure) and Google. Secret Multi-factor Authentication (MFA) \u00b6 PigeonHole adds MFA on at a secret level. This means when you share a secret with a recipient, you can enable the secret to challenge for an MFA code before it is downloaded by the client. This is achieved through the industry-standard TOTP algorithm. Data Encryption \u00b6 All data is encrypted on the sender's workstation and only decrypted at the recipient's workstation. Data Integrity \u00b6 OpenPGP checksums and signatures are created prior to encrypting and verified at the recipient's workstation once retrieved and decrypted. Should the integrity fail the files would be shredded and the download process retried. Secure File Shredding \u00b6 Should the sender or recipient require the file to irretrievable (even through data recovery techniques), the file shredding feature will first write randomly-generated bytes at a block level then delete the file. Encryption Keys \u00b6 Location \u00b6 All the private encryption keys are kept on the sender's machine and there are no master keys on our servers - even encrypted ones! This means PigeonHole cannot decrypt or intercept raw content. PigeonHole only has senders' public keys which are completely safe to share. Keys are stored in sender's workstation system keyring services; 1. Windows - Windows Credential Store 2. Linux - Secret Service dbus interface (provided by GNOME Keyring) 3. MacOS - Keychain Inspection \u00b6 If users wish they can inspect their own keys using standard GPG tooling. Note: The PEM formatted keys are base16 encoded to avoid particular corruption scenarios. Rotation \u00b6 Users can rotate and upload new keys at any point by performing pigeonhole keys rotate . Public Keys \u00b6 OpenPGP public keys are created on each user's workstation using the email address provided by their Identity Provider (IdP). File Encryption \u00b6 Behind the scenes PigeonHole uses the OpenPGP library maintained by ProtonMail to achieve secret sharing you can trust - there is never any man-in-the-middle! File encryption and decryption always happens within the sender/recipient's command-line.","title":"Security Architecture"},{"location":"security/#high-level-architecture-design","text":"","title":"High Level Architecture Design"},{"location":"security/#authentication","text":"PigeonHole does not store any username/passwords for authentication by design. From the very beginning PigeonHole requires you to authenticate through a third-party Identity Provider like Microsoft (Azure) and Google.","title":"Authentication"},{"location":"security/#secret-multi-factor-authentication-mfa","text":"PigeonHole adds MFA on at a secret level. This means when you share a secret with a recipient, you can enable the secret to challenge for an MFA code before it is downloaded by the client. This is achieved through the industry-standard TOTP algorithm.","title":"Secret Multi-factor Authentication (MFA)"},{"location":"security/#data-encryption","text":"All data is encrypted on the sender's workstation and only decrypted at the recipient's workstation.","title":"Data Encryption"},{"location":"security/#data-integrity","text":"OpenPGP checksums and signatures are created prior to encrypting and verified at the recipient's workstation once retrieved and decrypted. Should the integrity fail the files would be shredded and the download process retried.","title":"Data Integrity"},{"location":"security/#secure-file-shredding","text":"Should the sender or recipient require the file to irretrievable (even through data recovery techniques), the file shredding feature will first write randomly-generated bytes at a block level then delete the file.","title":"Secure File Shredding"},{"location":"security/#encryption-keys","text":"","title":"Encryption Keys"},{"location":"security/#location","text":"All the private encryption keys are kept on the sender's machine and there are no master keys on our servers - even encrypted ones! This means PigeonHole cannot decrypt or intercept raw content. PigeonHole only has senders' public keys which are completely safe to share. Keys are stored in sender's workstation system keyring services; 1. Windows - Windows Credential Store 2. Linux - Secret Service dbus interface (provided by GNOME Keyring) 3. MacOS - Keychain","title":"Location"},{"location":"security/#inspection","text":"If users wish they can inspect their own keys using standard GPG tooling. Note: The PEM formatted keys are base16 encoded to avoid particular corruption scenarios.","title":"Inspection"},{"location":"security/#rotation","text":"Users can rotate and upload new keys at any point by performing pigeonhole keys rotate .","title":"Rotation"},{"location":"security/#public-keys","text":"OpenPGP public keys are created on each user's workstation using the email address provided by their Identity Provider (IdP).","title":"Public Keys"},{"location":"security/#file-encryption","text":"Behind the scenes PigeonHole uses the OpenPGP library maintained by ProtonMail to achieve secret sharing you can trust - there is never any man-in-the-middle! File encryption and decryption always happens within the sender/recipient's command-line.","title":"File Encryption"},{"location":"documentation/quick-start/","text":"Getting started \u00b6 Thank you for checking out PigeonHole! Firstly, thank you for your support and simply using the tool! It's this activity that will keep PigeonHole going. Secondly, PigeonHole is still under active development. Go take a look at the Roadmap to see the ideas and features that are being considered - go vote and have your input! Pigeonhole is a simple yet super-secure cli tool to transfer secrets and is entirely built for those who live in the command-line. Installation \u00b6 PigeonHole is entirely built with convenience in mind and as such supports a wealth of package managers. Here you'll find package managers grouped by Operating System. Tip If your package manager has been missed then please provide your feedback and support will be added for you. MacOS \u00b6 Install Brew if you haven't got it already. Brew brew tap planesailingio/pigeonhole brew install pigeonhole Linux \u00b6 Brew Apt Yum Install Brew on Linux? Yes you can! Go ahead and give Brew a try on Linux - it just doesn't support casks. brew tap planesailingio/pigeonhole brew install pigeonhole Not Implemented If you would like to see this then please get in touch. It's not currently supported but is on the roadmap. apt install pigeonhole Not Implemented If you would like to see this then please get in touch. It's not currently supported but is on the roadmap. yum install pigeonhole Windows \u00b6 Not Currently Supported The Windows binaries are published to the Releases page. If you would like to see Windows Package Manager support sooner then vote on the [FEATURE REQUEST] Windows Package Managers & Distribution GitHub issue Manual Install App Installer (Winget) Scoop PowerShell Gallery winget source add - -name pigeonhole winget install pigeonhole scoop bucket add org https :// github . com / planesailingio / scoop-pigeonhole . git scoop install planesailingio / scoop-pigeonhole Install-Module -Name PigeonHole Import-Module -Name PigeonHole Manual / Download \u00b6 You can obtain the binaries for your platform and architecture by visiting Releases . Visit the Releases page, find the latest release and download the binary for your architecture Place the binary in a location that is in your PATH environment variable You should now be able to run pigeonhole login from any command-line Log in \u00b6 Signing into the command-line is super easy but currently requires a Microsoft account. Tip See the Roadmap to find out about future support for Identity Providers or vote for the identity provider you want to see added on the [FEATURE REQUEST] Identity Provider GitHub issue A completely anonymous mode has been planned into the Roadmap - it even includes sending secrets via Tor ! pigeonhole login [ azure | google | okta ] Example pigeonhole login azure Create your keys \u00b6 Once you have logged in, create your keys straight away by running: Example - Initialise Keys pigeonhole keys init Sending your first secrets \u00b6 Example - Send File-based Secret pigeonhole secret send -u user@domain.com -f ./somefile Example - Send Stdin-based Secret cat ./somefile | pigeonhole secret send -u user@domain.com","title":"Quick Start & Install"},{"location":"documentation/quick-start/#getting-started","text":"Thank you for checking out PigeonHole! Firstly, thank you for your support and simply using the tool! It's this activity that will keep PigeonHole going. Secondly, PigeonHole is still under active development. Go take a look at the Roadmap to see the ideas and features that are being considered - go vote and have your input! Pigeonhole is a simple yet super-secure cli tool to transfer secrets and is entirely built for those who live in the command-line.","title":"Getting started"},{"location":"documentation/quick-start/#installation","text":"PigeonHole is entirely built with convenience in mind and as such supports a wealth of package managers. Here you'll find package managers grouped by Operating System. Tip If your package manager has been missed then please provide your feedback and support will be added for you.","title":"Installation"},{"location":"documentation/quick-start/#macos","text":"Install Brew if you haven't got it already. Brew brew tap planesailingio/pigeonhole brew install pigeonhole","title":"MacOS"},{"location":"documentation/quick-start/#linux","text":"Brew Apt Yum Install Brew on Linux? Yes you can! Go ahead and give Brew a try on Linux - it just doesn't support casks. brew tap planesailingio/pigeonhole brew install pigeonhole Not Implemented If you would like to see this then please get in touch. It's not currently supported but is on the roadmap. apt install pigeonhole Not Implemented If you would like to see this then please get in touch. It's not currently supported but is on the roadmap. yum install pigeonhole","title":"Linux"},{"location":"documentation/quick-start/#windows","text":"Not Currently Supported The Windows binaries are published to the Releases page. If you would like to see Windows Package Manager support sooner then vote on the [FEATURE REQUEST] Windows Package Managers & Distribution GitHub issue Manual Install App Installer (Winget) Scoop PowerShell Gallery winget source add - -name pigeonhole winget install pigeonhole scoop bucket add org https :// github . com / planesailingio / scoop-pigeonhole . git scoop install planesailingio / scoop-pigeonhole Install-Module -Name PigeonHole Import-Module -Name PigeonHole","title":"Windows"},{"location":"documentation/quick-start/#manual-download","text":"You can obtain the binaries for your platform and architecture by visiting Releases . Visit the Releases page, find the latest release and download the binary for your architecture Place the binary in a location that is in your PATH environment variable You should now be able to run pigeonhole login from any command-line","title":"Manual / Download"},{"location":"documentation/quick-start/#log-in","text":"Signing into the command-line is super easy but currently requires a Microsoft account. Tip See the Roadmap to find out about future support for Identity Providers or vote for the identity provider you want to see added on the [FEATURE REQUEST] Identity Provider GitHub issue A completely anonymous mode has been planned into the Roadmap - it even includes sending secrets via Tor ! pigeonhole login [ azure | google | okta ] Example pigeonhole login azure","title":"Log in"},{"location":"documentation/quick-start/#create-your-keys","text":"Once you have logged in, create your keys straight away by running: Example - Initialise Keys pigeonhole keys init","title":"Create your keys"},{"location":"documentation/quick-start/#sending-your-first-secrets","text":"Example - Send File-based Secret pigeonhole secret send -u user@domain.com -f ./somefile Example - Send Stdin-based Secret cat ./somefile | pigeonhole secret send -u user@domain.com","title":"Sending your first secrets"},{"location":"documentation/configuration/authentication/","text":"Single Sign-On & Authentication \u00b6 Overview \u00b6 PigeonHole authentication is designed to be as seamless as possible while also keeping the service secure. The best way to achieve this is to provide Single Sign-On (SSO) as standard with no username/passwords stored in PigeonHole. SSO is extremely important and therefore at the heart of PigeonHole. Authentication Flow \u00b6 PigeonHole uses standard OAuth/OpenID Connect authentication flows: User initiates the login process via the command-line pigeonhole login azure . A browser tab is opened and the cli opens a port and listens for the browser response The PigeonHole API returns a 302 response directing the user to default Azure AD Application The user logs into and approves the application The browser is directed to a PigeonHole API endpoint Carrying the OAuth authorization code the browser hits the Azure PigeonHole API callback endpoint The PigeonHole API service calls out to the identity provider exchanging the short-lived auth code for an ID and Access token. On successful validation of the auth code the Identity Provider issues an Identity Provider Id and Access Token Information from the IdP tokens is added to the claims on the PigeonHole-issued JWT token On subsequent API calls from the command-line the PigeonHole-issued token is added in the Authorization: Bearer HTTP header. Protocol - OpenID Connect \u00b6 SAML2.0 will not be supported as the majority of Identity Providers support the modern OpenID Connect (OAuth2) protocol. Supported Identity Providers \u00b6 Azure/Microsoft - Default provider \u00b6 A global Azure AD application exists with basic permissions such that companies do not have to pre-authorize the Azure AD application. This means users do not need to worry about having an Azure global administrator of the Azure tenancy to approve the app. Users can login with basic OAuth scopes. To login with Azure/Microsoft as the Identity Provider, run: pigeonhole login azure or more simply: pigeonhole login Missing Identity Provider? Vote for your Identity Provider to be prioritised on the [FEATURE REQUEST] Identity Provider GitHub issue","title":"Authentication"},{"location":"documentation/configuration/authentication/#single-sign-on-authentication","text":"","title":"Single Sign-On &amp; Authentication"},{"location":"documentation/configuration/authentication/#overview","text":"PigeonHole authentication is designed to be as seamless as possible while also keeping the service secure. The best way to achieve this is to provide Single Sign-On (SSO) as standard with no username/passwords stored in PigeonHole. SSO is extremely important and therefore at the heart of PigeonHole.","title":"Overview"},{"location":"documentation/configuration/authentication/#authentication-flow","text":"PigeonHole uses standard OAuth/OpenID Connect authentication flows: User initiates the login process via the command-line pigeonhole login azure . A browser tab is opened and the cli opens a port and listens for the browser response The PigeonHole API returns a 302 response directing the user to default Azure AD Application The user logs into and approves the application The browser is directed to a PigeonHole API endpoint Carrying the OAuth authorization code the browser hits the Azure PigeonHole API callback endpoint The PigeonHole API service calls out to the identity provider exchanging the short-lived auth code for an ID and Access token. On successful validation of the auth code the Identity Provider issues an Identity Provider Id and Access Token Information from the IdP tokens is added to the claims on the PigeonHole-issued JWT token On subsequent API calls from the command-line the PigeonHole-issued token is added in the Authorization: Bearer HTTP header.","title":"Authentication Flow"},{"location":"documentation/configuration/authentication/#protocol-openid-connect","text":"SAML2.0 will not be supported as the majority of Identity Providers support the modern OpenID Connect (OAuth2) protocol.","title":"Protocol - OpenID Connect"},{"location":"documentation/configuration/authentication/#supported-identity-providers","text":"","title":"Supported Identity Providers"},{"location":"documentation/configuration/authentication/#azuremicrosoft-default-provider","text":"A global Azure AD application exists with basic permissions such that companies do not have to pre-authorize the Azure AD application. This means users do not need to worry about having an Azure global administrator of the Azure tenancy to approve the app. Users can login with basic OAuth scopes. To login with Azure/Microsoft as the Identity Provider, run: pigeonhole login azure or more simply: pigeonhole login Missing Identity Provider? Vote for your Identity Provider to be prioritised on the [FEATURE REQUEST] Identity Provider GitHub issue","title":"Azure/Microsoft - Default provider"},{"location":"documentation/configuration/overview/","text":"Configuration Overview \u00b6 All command-line configuration is stored in a yaml file under your home directory: $HOME/.pigeonhole/config.yaml . Over time there will be server-side configuration that will be included in the issued JWT token.overtime Command-line Configuration \u00b6 Parameter Description Default api.base_url The base Url the cli will call to. This can be overridden for development or for the future self-hosted implementations https://api.pigeono.io api.login_url Future proofing for self-hosted feature https://api.pigeono.io/sso/azure/login auth.provider The default provider the cli will use azure auth.token The JWT token issued by PigeonHole API. Useful for development/debugging purposes eyJhbGciOiJIUzI1NiIsI.... output.format Resource object output will be formatted as per this value. Supports json , yaml , tsv yaml output.logging.level Verbosity of logging information info Server-side Configuration \u00b6 There is no server-side configuration available at present. With the continued development, configurable features will be added over time, such as those on the current Roadmap s: Enabling the ability to receive files via web-browser Restriting sending to non-registered users Restricting file sizes","title":"Overview"},{"location":"documentation/configuration/overview/#configuration-overview","text":"All command-line configuration is stored in a yaml file under your home directory: $HOME/.pigeonhole/config.yaml . Over time there will be server-side configuration that will be included in the issued JWT token.overtime","title":"Configuration Overview"},{"location":"documentation/configuration/overview/#command-line-configuration","text":"Parameter Description Default api.base_url The base Url the cli will call to. This can be overridden for development or for the future self-hosted implementations https://api.pigeono.io api.login_url Future proofing for self-hosted feature https://api.pigeono.io/sso/azure/login auth.provider The default provider the cli will use azure auth.token The JWT token issued by PigeonHole API. Useful for development/debugging purposes eyJhbGciOiJIUzI1NiIsI.... output.format Resource object output will be formatted as per this value. Supports json , yaml , tsv yaml output.logging.level Verbosity of logging information info","title":"Command-line Configuration"},{"location":"documentation/configuration/overview/#server-side-configuration","text":"There is no server-side configuration available at present. With the continued development, configurable features will be added over time, such as those on the current Roadmap s: Enabling the ability to receive files via web-browser Restriting sending to non-registered users Restricting file sizes","title":"Server-side Configuration"},{"location":"earlyaccess/","text":"\ud83e\udd73 ALPHA to BETA \u00b6 PigeonHole is nearly at the point where it will transition from ALPHA to BETA status. What that means for you is simply we will be looking for more testers. It costs you nothing to sign up and start using the service, so why not give it a try and Sign up here . What's in it for you? \u00b6 Through the BETA \u00b6 Throughout the BETA lifecycle you will; Name the mascot Insider updates Shape the service for future customers Have significant more sway and involvement in feature requests Want more documentation? All you have to do is ask Prioritised support & bug fixes Post Launch and General Availability \u00b6 When the service formally launches, you'll receive; Foremost a big thank you on the launch release Stickers - They look fantastic! A premium hoody *1 Continued free use of the service Discounts on any PigeonHole monetised service should the decision be made to offer a commercial SaaS Providing Feedback \u00b6 Be as involved and vocal as much or as little as you want. Simply using the tool will provide significant feedback to improve the service. Once you've started the Sign Up process you will be emailed instructions noting; How to gain access to the BETA binaries Where and how to provide feedback Tips around providing valuable feedback Don't Wait - Sign Up NOW! \u00b6 Sign up here now! Notes: * 1 : The preumium hoodies are for those that are most active and provide valuable feedback that improve the service to show my appreciation","title":"Get Early Access"},{"location":"earlyaccess/#alpha-to-beta","text":"PigeonHole is nearly at the point where it will transition from ALPHA to BETA status. What that means for you is simply we will be looking for more testers. It costs you nothing to sign up and start using the service, so why not give it a try and Sign up here .","title":"\ud83e\udd73 ALPHA to BETA"},{"location":"earlyaccess/#whats-in-it-for-you","text":"","title":"What's in it for you?"},{"location":"earlyaccess/#through-the-beta","text":"Throughout the BETA lifecycle you will; Name the mascot Insider updates Shape the service for future customers Have significant more sway and involvement in feature requests Want more documentation? All you have to do is ask Prioritised support & bug fixes","title":"Through the BETA"},{"location":"earlyaccess/#post-launch-and-general-availability","text":"When the service formally launches, you'll receive; Foremost a big thank you on the launch release Stickers - They look fantastic! A premium hoody *1 Continued free use of the service Discounts on any PigeonHole monetised service should the decision be made to offer a commercial SaaS","title":"Post Launch and General Availability"},{"location":"earlyaccess/#providing-feedback","text":"Be as involved and vocal as much or as little as you want. Simply using the tool will provide significant feedback to improve the service. Once you've started the Sign Up process you will be emailed instructions noting; How to gain access to the BETA binaries Where and how to provide feedback Tips around providing valuable feedback","title":"Providing Feedback"},{"location":"earlyaccess/#dont-wait-sign-up-now","text":"Sign up here now! Notes: * 1 : The preumium hoodies are for those that are most active and provide valuable feedback that improve the service to show my appreciation","title":"Don't Wait - Sign Up NOW!"},{"location":"earlyaccess/usecases/","text":"","title":"Typical Use Cases"},{"location":"roadmap/v1/","text":"Roadmap for v1.0.0 \u00b6 A logo \u00b6 The mascot looks fantastic but the project still requires a smaller logo. Demo Videos & Asciinema \u00b6 Although the tool is very simple, more visual demo's of the tool would be nice. \ud83d\udda5\ufe0f Open Source the CLI \u00b6 A decision has yet to be made as to how much of PigeonHole is to be Open Sourced. The goal behind open sourcing the command-line tool is to provide confidence through complete transparency. Planned Features \u00b6 Web-Based Downloader/Decoder \u00b6 Leveraging browser-based libraries to allow recipients to download/decode from a browser rather than the command-line. Think - A developer or IT system administrator wanting to distribute secrets to less technical users. This provides a single and short link for users to click in a mail client, retrieve and decrypt the files in the browser directly. All without needing to open a shell/terminal. Grab Last Secret \u00b6 The tool has always been about convenience. To speed up retrieving a secret a colleague has sent recently (e.g. they may have messaged you on a collaboration tool), a quick and general pigeonhole secret grab command will retrieve the most recent secret instead of querying and specifying the reference or ID. Notifications \u00b6 More notifications are planned for the sender, recipient and tenant administrator. \ud83d\udcd6 Documentation \u00b6 The documentation will evolve over time. If you notice any mistakes or anything that can be improved feel free to fork the repository and create a pull request \ud83d\udd10 Identity Providers \u00b6 As authentication is completely delegated to external identity providers you trust, the immediate focus is to build in support for those additional identity providers. Vote for your Identity Provider to be prioritised on the [FEATURE REQUEST] Identity Provider GitHub issue. All Single Sign-On (SSO) leverages OpenID Connect, read the security architecture page for more information on the SSO mechanism. \ud83d\udd75\ufe0f\u200d\u2640\ufe0f External Audit \u00b6 With any security tool trust has to be earned and there's no better way to earn that trust than through transparency. There is an openness for the internal systems being audited; reach out to the security@planesailing.io mailbox if you are interested. \ud83e\uddd0 Encourage API Penetration Testing \u00b6 Penetration testing the Pigeonhole API is encouraged. For any zero days, do notify security@planesailing.io mailbox. \ud83d\udc68\u200d\ud83d\udcbb Feature Consultation \u00b6 It's expected there'll be scenarios where the tool may not function. The main scenario is lack of internet connectivity. Self-hosted version \u00b6 You may be in an environment where internet access is filtered or even not possible i.e. airgapped environments. At present the services rely on several AWS services and as such the tool requires internet connectivity. There are thoughts for v2 to support open source and self-hosted equivalents. If you want to see this vote on the Self-Hosted Version Request Finalise v2 Roadmap \u00b6 roadmapv2","title":"Version 1.0.0"},{"location":"roadmap/v1/#roadmap-for-v100","text":"","title":"Roadmap for v1.0.0"},{"location":"roadmap/v1/#a-logo","text":"The mascot looks fantastic but the project still requires a smaller logo.","title":"A logo"},{"location":"roadmap/v1/#demo-videos-asciinema","text":"Although the tool is very simple, more visual demo's of the tool would be nice.","title":"Demo Videos &amp; Asciinema"},{"location":"roadmap/v1/#open-source-the-cli","text":"A decision has yet to be made as to how much of PigeonHole is to be Open Sourced. The goal behind open sourcing the command-line tool is to provide confidence through complete transparency.","title":"\ud83d\udda5\ufe0f Open Source the CLI"},{"location":"roadmap/v1/#planned-features","text":"","title":"Planned Features"},{"location":"roadmap/v1/#web-based-downloaderdecoder","text":"Leveraging browser-based libraries to allow recipients to download/decode from a browser rather than the command-line. Think - A developer or IT system administrator wanting to distribute secrets to less technical users. This provides a single and short link for users to click in a mail client, retrieve and decrypt the files in the browser directly. All without needing to open a shell/terminal.","title":"Web-Based Downloader/Decoder"},{"location":"roadmap/v1/#grab-last-secret","text":"The tool has always been about convenience. To speed up retrieving a secret a colleague has sent recently (e.g. they may have messaged you on a collaboration tool), a quick and general pigeonhole secret grab command will retrieve the most recent secret instead of querying and specifying the reference or ID.","title":"Grab Last Secret"},{"location":"roadmap/v1/#notifications","text":"More notifications are planned for the sender, recipient and tenant administrator.","title":"Notifications"},{"location":"roadmap/v1/#documentation","text":"The documentation will evolve over time. If you notice any mistakes or anything that can be improved feel free to fork the repository and create a pull request","title":"\ud83d\udcd6 Documentation"},{"location":"roadmap/v1/#identity-providers","text":"As authentication is completely delegated to external identity providers you trust, the immediate focus is to build in support for those additional identity providers. Vote for your Identity Provider to be prioritised on the [FEATURE REQUEST] Identity Provider GitHub issue. All Single Sign-On (SSO) leverages OpenID Connect, read the security architecture page for more information on the SSO mechanism.","title":"\ud83d\udd10 Identity Providers"},{"location":"roadmap/v1/#external-audit","text":"With any security tool trust has to be earned and there's no better way to earn that trust than through transparency. There is an openness for the internal systems being audited; reach out to the security@planesailing.io mailbox if you are interested.","title":"\ud83d\udd75\ufe0f\u200d\u2640\ufe0f External Audit"},{"location":"roadmap/v1/#encourage-api-penetration-testing","text":"Penetration testing the Pigeonhole API is encouraged. For any zero days, do notify security@planesailing.io mailbox.","title":"\ud83e\uddd0 Encourage API Penetration Testing"},{"location":"roadmap/v1/#feature-consultation","text":"It's expected there'll be scenarios where the tool may not function. The main scenario is lack of internet connectivity.","title":"\ud83d\udc68\u200d\ud83d\udcbb Feature Consultation"},{"location":"roadmap/v1/#self-hosted-version","text":"You may be in an environment where internet access is filtered or even not possible i.e. airgapped environments. At present the services rely on several AWS services and as such the tool requires internet connectivity. There are thoughts for v2 to support open source and self-hosted equivalents. If you want to see this vote on the Self-Hosted Version Request","title":"Self-hosted version"},{"location":"roadmap/v1/#finalise-v2-roadmap","text":"roadmapv2","title":"Finalise v2 Roadmap"},{"location":"roadmap/v2/","text":"Direct Transfers \u00b6 There may be use cases where you want to stream secrets directly between machines without using PigeonHole's cloud S3 environment. Anonymous Usages \u00b6 PigeonHole currently requires requests to be authenticated from a third-party Identity Provider. There may be use cases where you want to allow a third-party contact the ability to send files to you anonymously without requiring account setup or authentication. Multiple Device Support \u00b6 Most password managers and secure file-sharing services require access to a single master encryption key. PigeonHole plans to flip this on its head by taking advantage of the benefits OpenPGP brings through multiple encryption private keys per user. This would safely enable multiple keys across devices without requiring a mechanism to facilitate the sharing of master password and establish trust between devices and the user account. Better GPG Support \u00b6 To provide a seamless experience of storing keys in the system credential store or if found use a GPG key store. Self-Hosted \u00b6 You may be in an environment where internet access is restricted or even with no connectivity i.e. airgapped environments. At present the PigeonHole services are dependent on several AWS services and as such the tool requires internet connectivity. There are thoughts for v2 to support open source and self-hosted alternatives. If you want to see this vote on the Self-Hosted Version Request Browser anonymous upload \u00b6 Allow unauthenticed guests browser app to drag 'n' drop files into a browser that encrypts on their remote machines. Bot (CI/CD) Support \u00b6 There are scenarios where system keychains may not be accessible or appropriate to install i.e. container-based environments. As such key storage will need to be adapted and additional configuration added. Identity Mangement \u00b6 Cross-Domain Identity Management (SCIM) \u00b6 A SCIM API will provide a better Single Sign-On and onboarding experience. Collaboration Tool Integrations \u00b6 MS Teams & Slack Notifications \u00b6 Building on the existing email notification mechanism, notifications will include notifying the user directly in the collaboration platforms. Service Stats \u00b6 Allow you to view how many users are using the service and how much data they are sending.","title":"Version 2.0.0"},{"location":"roadmap/v2/#direct-transfers","text":"There may be use cases where you want to stream secrets directly between machines without using PigeonHole's cloud S3 environment.","title":"Direct Transfers"},{"location":"roadmap/v2/#anonymous-usages","text":"PigeonHole currently requires requests to be authenticated from a third-party Identity Provider. There may be use cases where you want to allow a third-party contact the ability to send files to you anonymously without requiring account setup or authentication.","title":"Anonymous Usages"},{"location":"roadmap/v2/#multiple-device-support","text":"Most password managers and secure file-sharing services require access to a single master encryption key. PigeonHole plans to flip this on its head by taking advantage of the benefits OpenPGP brings through multiple encryption private keys per user. This would safely enable multiple keys across devices without requiring a mechanism to facilitate the sharing of master password and establish trust between devices and the user account.","title":"Multiple Device Support"},{"location":"roadmap/v2/#better-gpg-support","text":"To provide a seamless experience of storing keys in the system credential store or if found use a GPG key store.","title":"Better GPG Support"},{"location":"roadmap/v2/#self-hosted","text":"You may be in an environment where internet access is restricted or even with no connectivity i.e. airgapped environments. At present the PigeonHole services are dependent on several AWS services and as such the tool requires internet connectivity. There are thoughts for v2 to support open source and self-hosted alternatives. If you want to see this vote on the Self-Hosted Version Request","title":"Self-Hosted"},{"location":"roadmap/v2/#browser-anonymous-upload","text":"Allow unauthenticed guests browser app to drag 'n' drop files into a browser that encrypts on their remote machines.","title":"Browser anonymous upload"},{"location":"roadmap/v2/#bot-cicd-support","text":"There are scenarios where system keychains may not be accessible or appropriate to install i.e. container-based environments. As such key storage will need to be adapted and additional configuration added.","title":"Bot (CI/CD) Support"},{"location":"roadmap/v2/#identity-mangement","text":"","title":"Identity Mangement"},{"location":"roadmap/v2/#cross-domain-identity-management-scim","text":"A SCIM API will provide a better Single Sign-On and onboarding experience.","title":"Cross-Domain Identity Management (SCIM)"},{"location":"roadmap/v2/#collaboration-tool-integrations","text":"","title":"Collaboration Tool Integrations"},{"location":"roadmap/v2/#ms-teams-slack-notifications","text":"Building on the existing email notification mechanism, notifications will include notifying the user directly in the collaboration platforms.","title":"MS Teams &amp; Slack Notifications"},{"location":"roadmap/v2/#service-stats","text":"Allow you to view how many users are using the service and how much data they are sending.","title":"Service Stats"}]}